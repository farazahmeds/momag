# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'momag_gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys
from pathlib import Path
import h5py
from PyQt5 import QtWidgets, QtCore
from PyQt5.QtWidgets import QApplication, QMainWindow
from PyQt5.QtGui import QPixmap
from PyQt5.QtGui import QImage
import cv2
from neurovc.util.IO_util import Debayerer
from momag_ import run_momag

class DummyTextFile():
    output_file = Path("frames.txt")
    open('frames.txt', 'w').close()



class GUIWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(733, 735)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frames = QtWidgets.QLabel(self.centralwidget)
        self.frames.setGeometry(QtCore.QRect(70, 20, 581, 401))
        self.frames.setText("")
        self.frames.setObjectName("frames")
        self.frame_slider = QtWidgets.QSlider(self.centralwidget)
        self.frame_slider.setGeometry(QtCore.QRect(40, 450, 671, 22))
        self.frame_slider.setOrientation(QtCore.Qt.Horizontal)
        self.frame_slider.setObjectName("frame_slider")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(40, 530, 321, 61))
        self.pushButton.setObjectName("pushButton")
        self.frame_number = QtWidgets.QLabel(self.centralwidget)
        self.frame_number.setGeometry(QtCore.QRect(640, 430, 71, 20))
        self.frame_number.setText("")
        self.frame_number.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.frame_number.setObjectName("frame_number")
        self.run_motion_magnification = QtWidgets.QPushButton(self.centralwidget)
        self.run_motion_magnification.setGeometry(QtCore.QRect(560, 540, 161, 51))
        self.run_motion_magnification.setObjectName("run_motion_magnification")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(410, 540, 31, 40))
        self.label_3.setObjectName("label_3")
        self.lineEdit_alpha = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_alpha.setGeometry(QtCore.QRect(450, 550, 61, 20))
        self.lineEdit_alpha.setObjectName("lineEdit_alpha")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(410, 600, 91, 40))
        self.label_4.setObjectName("label_4")
        self.lineEdit_frame_rate = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_frame_rate.setGeometry(QtCore.QRect(500, 610, 61, 20))
        self.lineEdit_frame_rate.setObjectName("lineEdit_frame_rate")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(480, 480, 111, 20))
        self.label_5.setObjectName("label_5")
        self.label_total_frames = QtWidgets.QLabel(self.centralwidget)
        self.label_total_frames.setGeometry(QtCore.QRect(590, 480, 121, 21))
        self.label_total_frames.setText("")
        self.label_total_frames.setObjectName("label_total_frames")
        self.lineEdit_file_name = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_file_name.setGeometry(QtCore.QRect(470, 670, 161, 20))
        self.lineEdit_file_name.setObjectName("lineEdit_file_name")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(410, 660, 51, 40))
        self.label_6.setObjectName("label_6")
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setGeometry(QtCore.QRect(380, 490, 20, 211))
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(410, 510, 111, 20))
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(410, 570, 51, 40))
        self.label_8.setObjectName("label_8")
        self.lineEdit_threshold = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_threshold.setGeometry(QtCore.QRect(470, 580, 61, 20))
        self.lineEdit_threshold.setObjectName("lineEdit_threshold")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(40, 600, 271, 31))
        self.label_9.setTextFormat(QtCore.Qt.RichText)
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(40, 630, 291, 10))
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(40, 490, 51, 20))
        self.label_11.setObjectName("label_11")
        self.label_segments = QtWidgets.QLabel(self.centralwidget)
        self.label_segments.setGeometry(QtCore.QRect(100, 490, 51, 21))
        self.label_segments.setText("")
        self.label_segments.setObjectName("label_segments")
        self.lineEdit_frame_sampling_rate = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_frame_sampling_rate.setGeometry(QtCore.QRect(510, 641, 61, 20))
        self.lineEdit_frame_sampling_rate.setText("")
        self.lineEdit_frame_sampling_rate.setObjectName("lineEdit_frame_sampling_rate")
        self.label_12 = QtWidgets.QLabel(self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(410, 630, 101, 41))
        self.label_12.setObjectName("label_12")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 733, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionLoad_HDF_File = QtWidgets.QAction(MainWindow)
        self.actionLoad_HDF_File.setObjectName("actionLoad_HDF_File")
        self.menuFile.addAction(self.actionLoad_HDF_File)
        self.menubar.addAction(self.menuFile.menuAction())
        self.frames_list = None
        self.start_frame = None


        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Load HDF5"))
        self.pushButton.setText(_translate("MainWindow", "Select Frames"))
        self.run_motion_magnification.setText(_translate("MainWindow", "Run Motion Magnification"))
        self.label_3.setText(_translate("MainWindow", "alpha:"))
        self.label_4.setText(_translate("MainWindow", "video frame rate:"))
        self.label_5.setText(_translate("MainWindow", "total frames selected:"))
        self.label_6.setText(_translate("MainWindow", "file name:"))
        self.label_7.setText(_translate("MainWindow", "Configuration:"))
        self.label_8.setText(_translate("MainWindow", "threshold:"))
        self.label_9.setText(_translate("MainWindow", "Press \'Select Frames\' one time to select the first frame-- ,"))
        self.label_10.setText(_translate("MainWindow", "and press it second time to select last frame."))
        self.label_11.setText(_translate("MainWindow", "Segments:"))
        self.label_12.setText(_translate("MainWindow", "frame sampling rate:"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.actionLoad_HDF_File.setText(_translate("MainWindow", "Load HDF File"))

    def loadHDFFile(self):
        self.fileName, _ = QtWidgets.QFileDialog.getOpenFileName(None, "Open HDF File", "", "HDF Files (*.hdf *.h5)")
        if self.fileName:
            self.hdfFile = h5py.File(self.fileName, 'r')
            self.framesGenerator = self.frameGenerator()

            frameCount = self.hdfFile['Frames'].shape[0]
            self.frame_slider.setMaximum(frameCount - 1)
            self.updateFrame(0)

    def frameGenerator(self):
        for frame in self.hdfFile['Frames']:
            yield frame

    def updateFrame(self, frameIndex):
        if hasattr(self, 'framesGenerator'):
            self.debeyer = Debayerer()
            self.frame_number.setText(f'{frameIndex}')
            self.hdfFile['Frames'].id.refresh()
            frame = self.hdfFile['Frames'][frameIndex]
            frame = self.debeyer(frame)

            rgb = cv2.resize(frame, (frame.shape[1] // 4 * 4, frame.shape[0] // 3 * 3), fx=0, fy=0,
                                 interpolation=cv2.INTER_NEAREST)


            new_width = 645
            new_height = 405

            resized_image = cv2.resize(rgb, (new_width, new_height))

            qimage = QImage(resized_image.data, resized_image.shape[1], resized_image.shape[0],
                            QImage.Format_RGB888)
            pixmap = QPixmap.fromImage(qimage)
            self.frames.setPixmap(pixmap)

    def selectFrame(self):

        def _count_generator(reader):
            b = reader(1024 * 1024)
            while b:
                yield b
                b = reader(1024 * 1024)

        currentFrame = self.frame_slider.value()
        if not hasattr(self, 'labelFrameZeroSet'):
            self.start_frame = int(currentFrame)
            self.labelFrameZeroSet = True

            with open(f'frames.txt', f'a') as f:
                f.write(f"frame_0={int(currentFrame)}\n")
                f.close()
        else:
            with open(f'frames.txt', 'a') as f:
                f.write(f"frame_n={int(currentFrame)}\n")

            self.label_total_frames.setText(f'{int(currentFrame-self.start_frame)}')


            with open(r'frames.txt', 'rb') as fp:
                c_generator = _count_generator(fp.raw.read)
                count = sum(buffer.count(b'\n') for buffer in c_generator)
                self.label_segments.setText(f"{int (count/2)}")



    def momag(self):

        self.frames_list = []
        values = []

        with open('frames.txt', 'r') as file:
            for line in file:
                line = line.strip()
                if line:
                    _, value = line.split('=')
                    values.append(int(value))
                    if len(values) == 2:
                        self.frames_list.append(tuple(values))
                        values = []

        run_momag(path_to_hdf_file=self.fileName,
                  alpha=int(self.lineEdit_alpha.text()),
                  threshold=int(self.lineEdit_threshold.text()),
                  frame_rate=int(self.lineEdit_frame_rate.text()),
                  file_name=self.lineEdit_file_name.text(),
                  frames_list=self.frames_list,
                  frame_sampling_rate=int(self.lineEdit_frame_sampling_rate.text()))


class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.ui = GUIWindow()
        self.ui.setupUi(self)

        self.ui.actionLoad_HDF_File.triggered.connect(self.ui.loadHDFFile)
        self.ui.frame_slider.valueChanged.connect(self.ui.updateFrame)
        self.ui.pushButton.clicked.connect(self.ui.selectFrame)

        self.ui.run_motion_magnification.clicked.connect(self.ui.momag)


def main():
    DummyTextFile()
    app = QApplication(sys.argv)
    main_window = MainWindow()
    main_window.show()
    sys.exit(app.exec_())


if __name__ == "__main__":
    main()
